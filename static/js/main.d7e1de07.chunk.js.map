{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-slice.js","redux/store.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","redux/contacts/contacts-selectors.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/App/App.styled.js","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["changeFilter","createAction","filteredReducer","createReducer","actions","_","payload","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getAllContacts","query","providesTags","createContact","mutation","newContact","url","method","body","invalidatesTags","deleteContact","id","useGetAllContactsQuery","useCreateContactMutation","useDeleteContactMutation","middleware","useGetContactByNameQuery","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","Container","styled","div","Form","form","Label","label","Input","input","Btn","button","ContactForm","useState","name","setName","number","setNumber","data","nameInputId","uuidv4","numberInputId","handleFormChange","e","currentTarget","value","formReset","onSubmit","preventDefault","find","item","alert","htmlFor","type","placeholder","pattern","title","required","onChange","Title","h2","getFiltered","state","filtered","Filter","useSelector","dispatch","useDispatch","ListItem","li","Name","p","Number","BtnDelete","ContactItem","isDeleting","isLoading","style","paddingTop","marginRight","onClick","color","height","width","List","ul","ContactList","filteredContacts","filter","toLowerCase","includes","map","h1","SubTitle","LoaderWrapper","App","error","isFetching","status","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7e1de07.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n// import { v4 as uuidv4 } from 'uuid';\n\nexport const changeFilter = createAction('contacts/filtered');\n\n// Code without RTK-----------------------------------\n//---------------------------\n//async actions\n//  Pending\n// export const fetchContactsRequest = createAction(\n//   'contacts/fetchContactsRequest',\n// );\n//  Fulfilled\n// export const fetchContactsSuccess = createAction(\n//   'contacts/fetchContactsSuccess',\n// );\n//  Rejected\n// export const fetchContactsError = createAction('contacts/fetchContactsError');\n//если использовать createAsyncThunk из React-Toolkit\n//то async actions будут создаваться автоматически, объявлять их не нужно\n//---------------------------\n\n// export const addContact = createAction(\n//   'contacts/addContact',\n//   (name, number) => {\n//     return {\n//       payload: {\n//         id: uuidv4(),\n//         name: name,\n//         number: number,\n//       },\n//     };\n//   },\n// );\n\n// export const deleteContact = createAction('contacts/delete');\n// export const changeFilter = createAction('contacts/filtered');\n\n//-----------no react-toolkit actions version\n// export const addContact = (name, number) => ({\n//   type: actions.ADD_CONTACT,\n//   payload: {\n//     id: uuidv4(),\n//     name: name,\n//     number: number,\n//   },\n// });\n\n// export const deleteContact = id => ({\n//   type: actions.DELETE_CONTACT,\n//   payload: id,\n// });\n\n// export const changeFilter = value => ({\n//   type: actions.FILTERED,\n//   payload: value,\n// });\n","import { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\n\nconst initinalFilterState = '';\nexport const filteredReducer = createReducer(initinalFilterState, {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\n// Code without RTK-----------------------------------\n// const contactsReducer = createReducer(initialContactsState, {\n//   [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n//   //вариант с createAsyncThunk\n//   // [fetchContacts.fulfilled]: (_, { payload }) => payload,\n\n//   [actions.addContact]: (state, { payload }) => {\n//     if (state.find(item => item.name === payload.name)) {\n//       alert(`${payload.name + ' is already in contacts'}`);\n//       return state;\n//     }\n//     return [...state, payload];\n//   },\n\n//   [actions.deleteContact]: (state, { payload }) =>\n//     state.filter(contact => contact.id !== payload),\n// });\n\n// const loadingReducer = createReducer(false, {\n//   [actions.fetchContactsRequest]: () => true,\n//   [actions.fetchContactsSuccess]: () => false,\n//   [actions.fetchContactsError]: () => false,\n//   //вариант с createAsyncThunk\n//   // [fetchContacts.pending]: () => true,\n//   // [fetchContacts.fulfilled]: () => false,\n//   // [fetchContacts.rejected]: () => false,\n// });\n\n// const errorReducer = createReducer(null, {\n//   [actions.fetchContactsError]: (_, { payload }) => payload,\n//   //сброс ошибки в дефолтное состояние\n//   [actions.fetchContactsRequest]: () => null,\n//   //вариант с createAsyncThunk\n//   // [fetchContacts.rejected]: (_, { payload }) => payload,\n//   // //сброс ошибки в дефолтное состояние\n//   // [fetchContacts.pending]: () => null,\n// });\n\n// const initinalFilterState = '';\n// const filteredReducer = createReducer(initinalFilterState, {\n//   [actions.changeFilter]: (_, { payload }) => payload,\n// });\n\n// export const phoneBookReducer = combineReducers({\n//   contacts: contactsReducer,\n//   isLoading: loadingReducer,\n//   error: errorReducer,\n//   filtered: filteredReducer,\n// });\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61708a5f23781c0017289a96.mockapi.io/api/v1/',\n  }),\n  tagTypes: ['Contacts'],\n  endpoints: builder => ({\n    //фетч всех контактов из DB\n    getAllContacts: builder.query({\n      //по умолчанию метод GET (method: 'GET')\n      query: () => `/contacts`,\n      providesTags: ['Contacts'],\n    }),\n    // Создание нового контакта\n    createContact: builder.mutation({\n      query: newContact => ({\n        url: `/contacts`,\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n    // Удаление контакта\n    deleteContact: builder.mutation({\n      query: id => ({\n        url: `/contacts/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n    // Фильтр по имени\n    // getContactByName: builder.query({\n    //   query: id => `/contacts/${id}`,\n    // }),\n  }),\n});\n\nexport const {\n  useGetAllContactsQuery,\n  useCreateContactMutation,\n  useDeleteContactMutation,\n  useGetContactByNameQuery,\n} = contactsApi;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { filteredReducer } from './contacts/contacts-reducer';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport { contactsApi } from './contacts/contacts-slice';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filtered: filteredReducer,\n  },\n  middleware: [...middleware, contactsApi.middleware],\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// Code without RTK-----------------------------------\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n//   logger,\n// ];\n\n//Просмотр фунций-прослоек в console.log\n// console.log(middleware);\n\n//-----------------------------------------\n// стейт в localstorage, без phoneBookReducer.filtered(добавил blacklist)\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filtered'],\n// };\n\n// export const store = configureStore({\n//   reducer: {\n//     // вариант объекта с local storage, также раскоментировать PersistGate в index.js\n//     // phonebook: persistReducer(contactsPersistConfig, phoneBookReducer),\n//     phonebook: phoneBookReducer,\n//   },\n//   middleware,\n//   devTools: process.env.NODE_ENV === 'development', //по умолчанию true, можно не указывать их в объекте, включаем только в режиме разработки через NODE_ENV\n// });\n//-----------------------------------------\n\n//----------------------------------------- весь стейт в localstorage\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n// };\n// const rootReducer = combineReducers({\n//   phonebook: phoneBookReducer, //объект из rootReducer\n// });\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// export const store = configureStore({\n//   reducer: persistedReducer,\n//   middleware,\n//   devTools: process.env.NODE_ENV === 'development', //по умолчанию true, можно не указывать их в объекте, включаем только в режиме разработки через NODE_ENV\n// });\n//-----------------------------------------\n\n// export const persistor = persistStore(store);\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 0 auto 20px;\n  padding: 20px 10px;\n\n  max-width: 800px;\n\n  background-color: #fff;\n  border: 1px solid teal;\n  border-radius: 5px;\n  box-shadow: 1px 3px 10px -4px #050505;\n`;\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\nexport const Label = styled.label`\n  color: rgb(111, 121, 124);\n  font-size: 15px;\n  line-height: 20px;\n\n  &:not(last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport const Input = styled.input`\n  display: block;\n  padding: 5px 5px;\n\n  border-color: teal;\n  border-radius: 5px;\n\n  &:focus,\n  &:focus-visible,\n  &:active {\n    display: block;\n    padding: 5px 5px;\n\n    border-color: red;\n    outline-color: red;\n  }\n`;\nexport const Btn = styled.button`\n  display: inline-block;\n  padding: 10px 30px;\n  width: 180px;\n\n  margin-top: 40px;\n\n  border: 0.1em solid #353434;\n\n  border-radius: 5px;\n  box-sizing: border-box;\n  text-decoration: none;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 300;\n  color: #fff;\n  background-color: teal;\n  text-align: center;\n  transition: all 0.3s;\n  cursor: pointer;\n\n  &:focus,\n  &:focus-visible,\n  &:active {\n    color: #000000;\n    background-color: #92f9f952;\n    box-shadow: 1px 3px 10px -4px #050505;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Container, Form, Label, Input, Btn } from './ContactForm.styled';\nimport {\n  useCreateContactMutation,\n  useGetAllContactsQuery,\n} from 'redux/contacts/contacts-slice';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact] = useCreateContactMutation();\n  const { data } = useGetAllContactsQuery('');\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleFormChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    if (data.find(item => item.name === name)) {\n      alert(`${name + ' is already in contacts'}`);\n      return;\n    }\n    createContact(newContact);\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleOnSubmit}>\n        <Label htmlFor={nameInputId}>\n          Name\n          <Input\n            type=\"text\"\n            placeholder=\"Mark Zuckerberg\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleFormChange}\n            id={nameInputId}\n          />\n        </Label>\n\n        <Label htmlFor={numberInputId}>\n          Number\n          <Input\n            type=\"tel\"\n            placeholder=\"xxx-xx-xx\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleFormChange}\n            id={numberInputId}\n          />\n        </Label>\n\n        <Btn type=\"submit\">Add contact</Btn>\n      </Form>\n    </Container>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  justify-content: center;\n  text-align: center;\n  padding: 20px 10px;\n`;\nexport const Title = styled.h2`\n  color: rgb(111, 121, 124);\n`;\nexport const Input = styled.input`\n  margin: 0 auto;\n  display: block;\n  padding: 5px 5px;\n\n  border-color: teal;\n  border-radius: 5px;\n\n  &:focus,\n  &:focus-visible,\n  &:focus {\n    display: block;\n    padding: 5px 5px;\n\n    border-color: red;\n    outline-color: red;\n  }\n`;\n","export const getFiltered = state => state.filtered;\n// Code without RTK-----------------------------------\n// export const getContacts = state => state.phonebook.contacts;\n// export const getFiltered = state => state.phonebook.filtered;\n","import PropTypes from 'prop-types';\nimport { Container, Title, Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFiltered } from 'redux/contacts/contacts-selectors';\nimport { changeFilter } from 'redux/contacts/contacts-actions';\n\nconst Filter = () => {\n  const filtered = useSelector(getFiltered);\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Title>Search by name</Title>\n\n      <Input\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={filtered}\n        onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n      />\n    </Container>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  position: relative;\n  min-width: 160px;\n  width: 22%;\n  padding: 10px 10px;\n  margin: 7px;\n\n  color: rgb(111, 121, 124);\n  font-size: 14px;\n  line-height: 20px;\n\n  background-color: #fff;\n  border: 1px solid teal;\n  border-radius: 5px;\n  box-shadow: 1px 3px 10px -4px #050505;\n\n  transition: transform 0.25s linear, -webkit-transform 0.25s linear;\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nexport const Name = styled.p`\n  font-weight: 400;\n`;\nexport const Number = styled.p`\n  font-weight: 600;\n`;\nexport const BtnDelete = styled.button`\n  padding: 5px;\n  font-size: 20px;\n  line-height: 10px;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  color: teal;\n  border: 0;\n  outline: 0;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { IoIosContact } from 'react-icons/io';\nimport { AiFillPhone } from 'react-icons/ai';\nimport Loader from 'react-loader-spinner';\nimport { useDeleteContactMutation } from 'redux/contacts/contacts-slice';\nimport { ListItem, Name, Number, BtnDelete } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  return (\n    <ListItem>\n      <Name>\n        <IoIosContact style={{ paddingTop: '2', marginRight: '5' }} />\n        {name}:\n      </Name>\n      <Number>\n        <AiFillPhone style={{ paddingTop: '2', marginRight: '5' }} />\n        {number}\n      </Number>\n      <BtnDelete type=\"button\" onClick={() => deleteContact(id)}>\n        {isDeleting ? (\n          <Loader type=\"TailSpin\" color=\"teal\" height={16} width={16} />\n        ) : (\n          <FaTrashAlt style={{ width: '15' }} />\n        )}\n      </BtnDelete>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteBtnPush: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 800px;\n`;\nexport const List = styled.ul`\n  padding: 20px 5px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  border: 1px solid teal;\n  border-radius: 5px;\n`;\nexport const ListItem = styled.li`\n  position: relative;\n  min-width: 160px;\n  width: 22%;\n  padding: 10px 15px;\n  margin: 7px;\n\n  color: rgb(111, 121, 124);\n  font-size: 14px;\n  line-height: 20px;\n\n  background-color: #fff;\n  border: 1px solid teal;\n  border-radius: 5px;\n  box-shadow: 1px 3px 10px -4px #050505;\n\n  transition: transform 0.25s linear, -webkit-transform 0.25s linear;\n  overflow: hidden;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getFiltered } from 'redux/contacts/contacts-selectors';\nimport { useGetAllContactsQuery } from 'redux/contacts/contacts-slice';\nimport { Container, List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const { data } = useGetAllContactsQuery('');\n\n  const filtered = useSelector(getFiltered);\n\n  const filteredContacts = data.filter(item =>\n    item.name.toLowerCase().includes(filtered.toLowerCase()),\n  );\n\n  return (\n    <Container>\n      <List>\n        {data &&\n          filteredContacts.map(({ id, name, number }) => {\n            return <ContactItem key={id} id={id} name={name} number={number} />;\n          })}\n      </List>\n    </Container>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteBtnPush: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px 10px;\n`;\nexport const Title = styled.h1`\n  padding: 5px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  color: teal;\n  font-size: 15px;\n  font-weight: 600;\n  line-height: 1.5;\n  font-style: italic;\n\n  display: flex;\n  align-items: center;\n`;\nexport const SubTitle = styled.h2`\n  padding: 5px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  color: teal;\n  font-size: 15px;\n  font-weight: 600;\n  line-height: 1.5;\n  font-style: italic;\n\n  display: flex;\n  align-items: center;\n`;\nexport const LoaderWrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  position: fixed;\n  top: 40%;\n  left: 47%;\n`;\n","import { RiContactsBook2Fill } from 'react-icons/ri';\nimport { IoMdContacts } from 'react-icons/io';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\nimport { useGetAllContactsQuery } from 'redux/contacts/contacts-slice';\nimport Loader from 'react-loader-spinner';\nimport { Container, Title, SubTitle, LoaderWrapper } from './App.styled';\n\nconst App = () => {\n  const { data, error, isFetching } = useGetAllContactsQuery('');\n  return (\n    <>\n      {error && <Title>{error.status} Not Found</Title>}\n      {data && !isFetching ? (\n        <Container>\n          <Title>\n            Phonebook <RiContactsBook2Fill style={{ marginLeft: '3' }} />\n          </Title>\n          <ContactForm />\n          <Filter />\n          <SubTitle>\n            Contacts\n            <IoMdContacts style={{ marginLeft: '3' }} />\n          </SubTitle>\n          <ContactList />\n        </Container>\n      ) : (\n        <LoaderWrapper>\n          <Loader type=\"TailSpin\" color=\"teal\" height={80} width={80} />\n        </LoaderWrapper>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {\n  store,\n  // persistor\n} from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\n// console.log('STATE ---> ', store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}